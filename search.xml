<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>通过Nginx代理负载访问Tomcat集群</title>
    <url>/2024/07/20/1-%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/story2/Nginx%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BDTomca%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一-通过Docker搭建三个Tomcat容器"><a href="#一-通过Docker搭建三个Tomcat容器" class="headerlink" title="一.通过Docker搭建三个Tomcat容器"></a>一.通过Docker搭建三个Tomcat容器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.创建容器项目部署目录挂载位置</span></span><br><span class="line"><span class="built_in">mkdir</span> -p  /home/tomcat/webapps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建并运行Tomcat容器</span></span><br><span class="line">docker run --name my-tomcat -d -p 8080:8080 \</span><br><span class="line">-v /home/tomcat/webapps:/usr/local/tomcat/webapps/ \</span><br><span class="line">tomcat:9</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.将事先准备号的静态网页部署到Tomcat下访问测试</span></span><br></pre></td></tr></table></figure>

<h2 id="二-通过Docker搭建Nginx容器"><a href="#二-通过Docker搭建Nginx容器" class="headerlink" title="二.通过Docker搭建Nginx容器"></a>二.通过Docker搭建Nginx容器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.创建Nginx容器配置文件挂载的宿主机磁盘目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p  /home/nginx/conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建并运行Nginx容器</span></span><br><span class="line">docker run --name my-nginx -d \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">   nginx:latest</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="comment">#3.将nginx内部的配置文件复制到物理机挂载目录中</span></span><br><span class="line">docker <span class="built_in">cp</span> my-nginx:/etc/nginx/nginx.conf /home/nginx/conf/nginx.conf</span><br><span class="line">docker <span class="built_in">cp</span> my-nginx:/etc/nginx/conf.d  /home/nginx/conf/</span><br><span class="line">docker <span class="built_in">cp</span> my-nginx:/usr/share/nginx/html /home/nginx/html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.删除nginx容器</span></span><br><span class="line">docker stop  my-nginx</span><br><span class="line">docker <span class="built_in">rm</span> -f  my-nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.重新创建并运行Nginx容器</span></span><br><span class="line">docker run --name my-nginx -d \</span><br><span class="line">  -p 80:80 \</span><br><span class="line">  -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">  -v /home/nginx/conf/conf.d:/etc/nginx/conf.d \</span><br><span class="line">  -v /home/nginx/html:/usr/share/nginx/html \</span><br><span class="line">  nginx:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="三-配置nginx代理访问Tomcat集群"><a href="#三-配置nginx代理访问Tomcat集群" class="headerlink" title="三.配置nginx代理访问Tomcat集群"></a>三.配置nginx代理访问Tomcat集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.配置反向代理 方式1  default.conf</span></span><br><span class="line">upstream bogeServer &#123;</span><br><span class="line">        <span class="comment">#server代表服务器地址</span></span><br><span class="line">        server 192.168.141.131:8080;</span><br><span class="line">        server 192.168.141.132:8080; </span><br><span class="line">        server 192.168.141.133:8080;   		</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        proxy_pass http://bogeServer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.配置反向代理 方式2</span></span><br><span class="line">upstream bogeServer &#123;</span><br><span class="line">        <span class="comment">#server代表服务器地址</span></span><br><span class="line">        server 192.168.141.131:8080 weight=1;</span><br><span class="line">        server 192.168.141.132:8080 weight=2; </span><br><span class="line">        server 192.168.141.133:8080 weight=3;   		</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        proxy_pass http://bogeServer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.配置反向代理 方式3</span></span><br><span class="line">upstream bogeServer &#123;</span><br><span class="line">        ip_hash;</span><br><span class="line">        <span class="comment">#server代表服务器地址</span></span><br><span class="line">        server 192.168.141.131:8080;</span><br><span class="line">        server 192.168.141.132:8080; </span><br><span class="line">        server 192.168.141.133:8080;   		</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        proxy_pass http://bogeServer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改完重启nginx</span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>运维技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Docker快速搭建Mysql集群</title>
    <url>/2024/07/01/1-%E8%BF%90%E7%BB%B4%E6%8A%80%E6%9C%AF/story2/%E5%9F%BA%E4%BA%8EDocker%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAMysql%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="搭建主从复制的mysql集群详细步骤"><a href="#搭建主从复制的mysql集群详细步骤" class="headerlink" title="搭建主从复制的mysql集群详细步骤"></a>搭建主从复制的mysql集群详细步骤</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.创建数据卷</span></span><br><span class="line">docker volume create mysql_data</span><br><span class="line">docker volume create mysql_logs</span><br><span class="line">docker volume create mysql_configs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建容器</span></span><br><span class="line">docker run --name mysql-server \</span><br><span class="line">           -e MYSQL_ROOT_PASSWORD=root123 \</span><br><span class="line">           -v mysql_data:/var/lib/mysql \</span><br><span class="line">           -v mysql_logs:/var/log/mysql \</span><br><span class="line">           -v mysql_configs:/etc/mysql/conf.d \</span><br><span class="line">           -p 3306:3306 \</span><br><span class="line">           -d mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.挂载位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.容器内文件对应位置</span></span><br><span class="line">/etc/mysql/conf.d   <span class="comment">#容器内部配置   /var/lib/docker/volumes/mysql_configs/_data</span></span><br><span class="line">/var/lib/mysql      <span class="comment">#容器内部数据   /var/lib/docker/volumes/mysql_data/_data</span></span><br><span class="line">/var/log/mysql      <span class="comment">#容器内部日志   /var/lib/docker/volumes/mysql_logs/_data</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.登录mysql</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql-server mysql -u root -p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#6.主节点授权</span></span><br><span class="line">GRANT REPLICATION SLAVE ON *.* to <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################配置主##########################</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#主服务器唯一ID</span></span><br><span class="line">server-id=1</span><br><span class="line"><span class="comment">#启用二进制日志</span></span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##########################配置从##########################</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">## 设置server_id,注意要唯一</span></span><br><span class="line"><span class="comment">#从服务器唯一ID</span></span><br><span class="line">server-id=2</span><br><span class="line"><span class="comment">#启用中继日志</span></span><br><span class="line">relay-log=mysql-relay</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##########################重启mysql##########################</span></span><br><span class="line">service mysql restart</span><br><span class="line">docker restart mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.查看主节点状态</span></span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.配置从节点</span></span><br><span class="line">change master to master_host=<span class="string">&#x27;192.168.141.131&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123456&#x27;</span>,master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,master_log_pos=2702;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.启动从节点</span></span><br><span class="line">start  slave</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.查看从节点</span></span><br><span class="line">show slave status \G; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#11.重置从节点</span></span><br><span class="line">reset slave all;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="查看所有数据卷的简要列表："><a href="#查看所有数据卷的简要列表：" class="headerlink" title="查看所有数据卷的简要列表："></a>查看所有数据卷的简要列表：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<h2 id="查看特定数据卷的详细信息："><a href="#查看特定数据卷的详细信息：" class="headerlink" title="查看特定数据卷的详细信息："></a>查看特定数据卷的详细信息：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker volume inspect &lt;volume_name&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>例如，要查看名为 <code>mysql_data</code> 的数据卷的详细信息，你可以运行：</p>
<p>docker volume inspect mysql_data</p>
</blockquote>
]]></content>
      <categories>
        <category>运维技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
</search>
